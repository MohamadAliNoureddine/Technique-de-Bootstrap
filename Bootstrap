def calculate_sobol_indices_bootstrap(X_in, y_in, ninter, nminvar, num_bootstrap_samples):
    n_params = X_in.shape[1]
    n_times = y_in.shape[1]

    sobol_indices_bootstrap = np.zeros((n_params, n_times, num_bootstrap_samples))

    for bootstrap_sample in range(num_bootstrap_samples):
        # Échantillonnage avec remplacement
        indices_bootstrap = np.random.choice(np.arange(106496), size=106496, replace=True)

        for param in range(n_params):
            x = X_in[indices_bootstrap, param]

            for time_step in range(n_times):
                y = y_in[indices_bootstrap, time_step]

                # Calcul des indices de Sobol pour cet échantillon bootstrap
                Sobol_index = compute_sobol_index(x, y, ninter, nminvar)

                # Stockage de l'indice de Sobol pour cet échantillon bootstrap
                sobol_indices_bootstrap[param, time_step, bootstrap_sample] = Sobol_index

    return sobol_indices_bootstrap

# Paramètres pour le bootstrap
num_bootstrap_samples = 10

# Calcul des indices de Sobol pour chaque échantillon bootstrap
sobol_indices_bootstrap = calculate_sobol_indices_bootstrap(X_in, y_in, ninter=30, nminvar=20, num_bootstrap_samples=num_bootstrap_samples)

# Impression des résultats des indices de Sobol bootstrap
print("Indices de Sobol bootstrap pour chaque paramètre à chaque pas de temps :")
print(sobol_indices_bootstrap.shape)



# Visualisation des indices de Sobol bootstrap en fonction des fréquences
plt.figure(figsize=(12, 8))
for i in range (num_bootstrap_samples):
     plt.plot(frequences[0], sobol_indices_bootstrap[0,:,i])
     #plt.plot(frequences[0], sobol_indices_bootstrap[1,:,i])
     #plt.plot(frequences[0], sobol_indices_bootstrap[2,:,i])
     #plt.plot(frequences[0], sobol_indices_bootstrap[3,:,i])
     #plt.plot(frequences[0], sobol_indices_bootstrap[4,:,i])
     #plt.plot(frequences[0], sobol_indices_bootstrap[5,:,i])
     plt.title(f'Indices de Sobol pour Vs1 à chaque-Bootstrap sample {i+1}')
     plt.xlabel('Fréquences')
     plt.xlim(0,1.3)
     plt.ylabel('Indice de Sobol')
     plt.legend()
     plt.show()
bootstrap_sobol_array = np.array(sobol_indices_bootstrap)
mean_des_indices=np.mean(sobol_indices_bootstrap,axis=2)
variance_des_indices=np.var(sobol_indices_bootstrap,axis=2)
ecart_type_des_indices=np.std(sobol_indices_bootstrap,axis=2)
print(mean_des_indices.shape)
#plt.figure()
#plt.plot(frequences[0],mean_des_indices[:,0])
#plt.xlim(0,2)
#plt.show()
fig, (ax1, ax2,ax3) = plt.subplots(3, 1, figsize=(10, 18))
# Graphique 1 : Espérance des espérances
ax1.plot(frequences[0], mean_des_indices[0], color='green', linewidth=2,label="Mean des indices")
ax1.set_xlim(0, 1.3)
ax1.set_xlabel('Frequency[Hz]')
ax1.set_ylabel('indices de sobol')
#ax1.set_title("")
ax1.legend()
# Graphique 2 : Variance des espérances
ax2.plot(frequences[0], variance_des_indices[0], color='blue', linewidth=2)
ax2.set_xlim(0, 1.3)
ax2.set_xlabel('Frequency[Hz]')
ax2.set_ylabel('Variance ')
#ax2.set_title("Variance ")
ax2.legend()
ax3.plot(frequences[0], mean_des_indices[0], color='green', linewidth=2)
ax3.fill_between(frequences[0], mean_des_indices[0] + 3*ecart_type_des_indices[0], mean_des_indices[0] - 3*ecart_type_des_indices[0], color='gray', alpha=0.5, label='mean of means ± 3*standard deviation')
ax3.set_xlim(0, 1.3)
ax3.set_xlabel('Frequency[Hz]')
ax3.set_ylabel('Indices de sobol')
#ax3.set_title("mean  ± standard deviation")
ax3.legend()
plt.tight_layout()  # Ajustement automatique de la disposition des sous-graphiques
plt.show()
